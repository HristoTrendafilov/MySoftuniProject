@using AllAboutGames.Common
@using AllAboutGames.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (this.SignInManager.IsSignedIn(this.User))
    {
        @if (this.User.IsInRole("Administrator"))
        {
            <li class="nav-item dropdown">
                <a class="nav-link  dropdown-toggle" href="#" data-toggle="dropdown">Add</a>
                <ul class="dropdown-menu fade-up">
                    <a class="dropdown-item" asp-area="" asp-controller="Games" asp-action="Add">Add Game</a>
                    <a class="dropdown-item" asp-area="" asp-controller="Platforms" asp-action="Add">Add Platform</a>
                    <a class="dropdown-item" asp-area="" asp-controller="Users" asp-action="AddToRole">Add User to Role</a>
                </ul>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @(this.User.Identity.Name)!</a>
        </li>
        if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
        {
            <li class="nav-item">
                <a class="nav-link" asp-area="Administration" asp-controller="Dashboard" asp-action="Index" title="Admin">Admin</a>
            </li>
        }
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@(this.Url.Action("Index", "Home", new { area = string.Empty }))">
                <button type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
